window.d3 = d3version3;
parseDate = d3.time.format("%Y-%m-%d").parse;
//var selectData = [];
d3.csv('xu_files/data/scatter_data.csv',function (data) {
// CSV section
    window.d3 = d3version3;
    data.forEach(function (d) {
       d.post_number = +d.post_number;
       d["initial_time"] = parseDate(d["initial_time"]);
       d["last_time"] = parseDate(d["last_time"]);
    });

  var body = d3.select("#scatter_id");
  var selectData = [ { "text" : "post_number" },
                     { "text" : "initial_time"},
                     { "text" : "duration" }
                   ];

  // Select X-axis Variable
  var span = body.append('span')
    .text('Select X-Axis variable: ')
  var yInput = body.append('select')
      .attr('id','xSelect')
      .on('change',xChange)
    .selectAll('option')
      .data(selectData)
      .enter()
    .append('option')
      .attr('value', function (d) { return d.text })
      .text(function (d) { return d.text ;})
  body.append('br')

  // Select Y-axis Variable
  var span = body.append('span')
      .text('Select Y-Axis variable: ')
  var yInput = body.append('select')
      .attr('id','ySelect')
      .on('change',yChange)
    .selectAll('option')
      .data(selectData)
      .enter()
    .append('option')
      .attr('value', function (d) { return d.text })
      .text(function (d) { return d.text ;})
  body.append('br')

  // Variables
  var body = d3.select("div.scatter")
  var margin = { top: 50, right: 50, bottom: 50, left: 50 }
  var h = 500 - margin.top - margin.bottom
  var w = 500 - margin.left - margin.right
  var formatPercent = d3.format('.2%')
  // Scales
  var colorScale = d3.scale.category20()
  var xScale = d3.scale.linear()
    .domain([
      d3.min([0,d3.min(data,function (d) { return d['post_number'] })]),
      d3.max([0,d3.max(data,function (d) { return d['post_number'] })])
      ])
    .range([0,w])
  var yScale = d3.scale.linear()
    .domain([
      d3.min([0,d3.min(data,function (d) { return d['post_number'] })]),
      d3.max([0,d3.max(data,function (d) { return d['post_number'] })])
      ])
    .range([h,0])
  // SVG
  var svg = body.append('svg')
      .attr('height',h + margin.top + margin.bottom)
      .attr('width',w + margin.left + margin.right)
    .append('g')
      .attr('transform','translate(' + margin.left + ',' + margin.top + ')')
  // X-axis
  var xAxis = d3.svg.axis()
    .scale(xScale)
    //.tickFormat(formatPercent)
    .ticks(5)
    .orient('bottom')
  // Y-axis
  var yAxis = d3.svg.axis()
    .scale(yScale)
    //.tickFormat(formatPercent)
    .ticks(5)
    .orient('left')
  // Circles
  var circles = svg.selectAll('circle')
      .data(data)
      .enter()
    .append('circle')
      .attr('cx',function (d) { return xScale(d['post_number']) })
      .attr('cy',function (d) { return yScale(d['post_number']) })
      .attr('r','10')
      .attr('stroke','black')
      .attr('stroke-width',1)
      .attr('fill',function (d,i) { return colorScale(i) })
      .on('mouseover', function () {
        d3.select(this)
          .transition()
          .duration(500)
          .attr('r',20)
          .attr('stroke-width',3)
      })
      .on('mouseout', function () {
        d3.select(this)
          .transition()
          .duration(500)
          .attr('r',10)
          .attr('stroke-width',1)
      })
    .append('title') // Tooltip
      .text(function (d) { return d.variable +
                           '\nReturn: ' + formatPercent(d["initial_time"]) +
                           '\nStd. Dev.: ' + formatPercent(d['post_number']) +
                           '\nMax Drawdown: ' + formatPercent(d['last_time']) })
  // X-axis
  svg.append('g')
      .attr('class','axis')
      .attr('id','xAxis')
      .attr('transform', 'translate(0,' + h + ')')
      .call(xAxis)
    .append('text') // X-axis Label
      .attr('id','xAxisLabel')
      .attr('y',-10)
      .attr('x',w)
      .attr('dy','.71em')
      .style('text-anchor','end')
      .text('post_number')
  // Y-axis
  svg.append('g')
      .attr('class','axis')
      .attr('id','yAxis')
      .call(yAxis)
    .append('text') // y-axis Label
      .attr('id', 'yAxisLabel')
      .attr('transform','rotate(-90)')
      .attr('x',0)
      .attr('y',5)
      .attr('dy','.71em')
      .style('text-anchor','end')
      .text('post_number')

  function yChange() {
      window.d3 = d3version3;
    var value = this.value // get the new y value
      if (value == "initial_time"){
      //var xMin = d3.min(data, function(c) { return d3.min(c.values, function(d) { return d[value]; })})
        //  var xMax = d3.max(data, function(c) { return d3.min(c.values, function(d) { return d[value]; })})
      //console.log(xMin);
      var yScale = d3.time.scale() // change the yScale
      .domain(d3.extent(data, function(d) { return d[value]; }))
          .range([0, 400]);
      }
      else
          {
     var yScale = d3.scale.linear()// change the yScale
      .domain([
        d3.min([0,d3.min(data,function (d) { return d[value] })]),
        d3.max([0,d3.max(data,function (d) { return d[value] })])
        ])
         .range([0,400])}
    yAxis.scale(yScale) // change the yScale
    d3.select('#yAxis') // redraw the yAxis
      .transition().duration(1000)
      .call(yAxis)
    d3.select('#yAxisLabel') // change the yAxisLabel
      .text(value)
    d3.selectAll('circle') // move the circles
      .transition().duration(1000)
      .delay(function (d,i) { return i*100})
        .attr('cy',function (d) { return yScale(d[value]) })
  }

  function xChange() {
      window.d3 = d3version3;
    var value = this.value // get the new x value
      if (value == "initial_time"){
      //var xMin = d3.min(data, function(c) { return d3.min(c.values, function(d) { return d[value]; })})
        //  var xMax = d3.max(data, function(c) { return d3.min(c.values, function(d) { return d[value]; })})
      //console.log(xMin);
      var xScale = d3.time.scale() // change the xScale
      .domain(d3.extent(data, function(d) { return d[value]; }))
          .range([0, 400]);
      }
      else{
    var xScale = d3.scale.linear() // change the xScale
      .domain([
        d3.min([0,d3.min(data,function (d) { return d[value] })]),
        d3.max([0,d3.max(data,function (d) { return d[value] })])
        ])
        .range([0,400])}
    xAxis.scale(xScale) // change the xScale
    d3.select('#xAxis') // redraw the xAxis
      .transition().duration(1000)
      .call(xAxis)
    d3.select('#xAxisLabel') // change the xAxisLabel
      .transition().duration(1000)
      .text(value)
    d3.selectAll('circle') // move the circles
      .transition().duration(1000)
      .delay(function (d,i) { return i*100})
        .attr('cx',function (d) { return xScale(d[value]) })
  }
})