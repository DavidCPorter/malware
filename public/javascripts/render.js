// https://blog.risingstack.com/d3version4-js-tutorial-bar-charts-with-javascript/
"use strict";

queue()
    .defer(d3version3.json, "/api/data")
    .await(makeGraphs);

function makeGraphs(error, apiData) {

    var dataSet = apiData;
    console.log(dataSet);
    var thread_cache;
    render(apiData);

//d3version3.json(apiData, render);


//thread_cache = d3version3.json("data/vis.json", render);

//Respond to Change in Date Slider
//this slider should never filter the global data set "thread_cache" only pcp filter should
    $("#date_slider").bind("valuesChanged", function (e, d) {
        // console.log("RANNNNN");
        //pc.brushReset();
        render(thread_cache);
    });

    function render(data) {
        //console.log(data);
        var startDate = $("#date_slider");
        var endDate = $("#date_slider");
        startDate = startDate.dateRangeSlider("values").min;
        endDate = endDate.dateRangeSlider("values").max;

        $('#remove_filters_button')
            .attr('class', 'btn btn-outline-dark')
            .text('REMOVE ALL PCP FILTERS');

        thread_cache = data;

//thread_id,resolution_status,number_replies,symptoms,startDate,endDate,duration,malware
        var threads = data.filter(row => {
            let date = new Date(row.startDate);
            // console.log(date,startDate,date >= startDate)
            return date >= startDate && date <= endDate;
        });
        // console.log(threads);
        if (threads == false) {
            $('#remove_filters_button')
                .attr('class', 'btn btn-danger')
                .text('NO RESULTS - SLIDE DATE BACK OR CLICK TO REMOVE FILTERS');

            return render_no_pcp;
        }
        ;

        drawPCP(threads);
        drawresolved(threads);
        barchart(threads);
        linechart(threads);
        drawWordCloud(threads);
        scatter(threads);
    }
}
    function render_no_pcp(threads) {
//replaces thread_cache w/ only pcp filtered data (threads)
        //thread_cache = threads;
//then runs the charts with this data
        drawresolved(threads);
        barchart(threads);
        linechart(threads);
        drawWordCloud(threads);
        scatter(threads);
    }
 function restore_dataset() {
    queue()
    .defer(d3version3.json, "/api/data")
    .await(makeGraphs);

    }
