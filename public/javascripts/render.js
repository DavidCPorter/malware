// https://blog.risingstack.com/d3version4-js-tutorial-bar-charts-with-javascript/
"use strict";


// let startDate = new Date("5/18/04 8:52");
// let endDate = new Date("5/17/18 8:52");
// let dataCache = undefined;
//
// let $endDate = $('#endDate');
// let $startDate = $('#startDate');

// $startDate.datepicker({
//     uiLibrary: 'bootstrap4'
// });
// $endDate.datepicker({
//     uiLibrary: 'bootstrap4'
// });
//
// $startDate.val(startDate.toLocaleDateString());
// $endDate.val(endDate.toLocaleDateString());

var thread_cache = d3version4.csv("david_files/data/thread_sta_out.csv", render);

// $( "#render" ).click(function() {
//     if(!dataCache) {
//         alert("Data not loaded. Please wait")
//     }
//     else render(dataCache);
// });

// Get Date slider values
// var dateValues = $("#date_slider").dateRangeSlider("values");
// console.log(dateValues.min.toString() + " " + dateValues.max.toString());

//Respond to Change in Date Slider
$("#date_slider").bind("valuesChanged", function(e,d) {
  console.log("RANNNNN");
  // pc.brushReset();
  render(thread_cache);
});



function render(data) {
  // console.log(data);
  var startDate = $("#date_slider");
  var endDate = $("#date_slider");
  startDate = startDate.dateRangeSlider("values").min;
  endDate = endDate.dateRangeSlider("values").max;
  // startDate = startDate.toISOString();
  // endDate = endDate.toISOString();
  // console.log(startDate, endDate);
  thread_cache = data;

  var threads = data.filter(row => {
    let date = new Date(row.initial_time);
    // console.log(date,startDate,date >= startDate)
    return date >= startDate && date <= endDate;
  });

  drawPCP(threads);
  // updateGrid(threads);
  drawresolved(threads, startDate, endDate);
  barchart(threads, startDate, endDate);
  linechart(threads, startDate, endDate);
  drawWordCloud(threads, startDate, endDate);
  return data;
}

function brush_render(threads) {
  // console.log(data);
  var startDate = $("#date_slider");
  var endDate = $("#date_slider");
  startDate = startDate.dateRangeSlider("values").min;
  endDate = endDate.dateRangeSlider("values").max;
  // startDate = startDate.toISOString();
  // endDate = endDate.toISOString();
  // console.log(startDate, endDate);

  drawPCP(threads);
  // updateGrid(threads);
  drawresolved(threads, startDate, endDate);
  barchart(threads, startDate, endDate);
  linechart(threads, startDate, endDate);
  drawWordCloud(threads, startDate, endDate);
}

function render_no_pcp(data) {
  console.log(data);
  var startDate = $("#date_slider");
  var endDate = $("#date_slider");
  startDate = startDate.dateRangeSlider("values").min;
  endDate = endDate.dateRangeSlider("values").max;
  // startDate = startDate.toISOString();
  // endDate = endDate.toISOString();
  // console.log(startDate, endDate);
  thread_cache = data;

  var threads = data.filter(row => {
    let date = new Date(row.initial_time);
    // console.log(date,startDate,date >= startDate)
    return date >= startDate && date <= endDate;
  });

  // drawPCP(threads);
  // updateGrid(threads);
  drawresolved(threads, startDate, endDate);
  barchart(threads, startDate, endDate);
  linechart(threads, startDate, endDate);
  drawWordCloud(threads, startDate, endDate);
  console.log(data);
}
