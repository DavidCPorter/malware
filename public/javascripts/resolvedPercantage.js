function drawresolved(data) {


    var total_threads = data.length;
    var resolved_threads = data.filter(row => row.resolution_status === 'resolved').length;

    //todo - hack to handle divide by 0. Since this implies no data, 0 might be the ideal percentage.
    if (total_threads === 0) {
        total_threads = 1;
    }

    let aspectRatio = 1;
    var margin = {top: 50, right: 50, bottom: 50, left: 50},
        width = d3version3.select('.resolvedPercentage').node().clientWidth - margin.left - margin.right,
        // height = d3version3.select('.resolvedPercentage').node().clientHeight - margin.top - margin.bottom;
        height = (d3version3.select('.resolvedPercentage').node().clientWidth * aspectRatio) - margin.top - margin.bottom;

    var thickness = 40;
    var inner_radius = width/2 - thickness;

    var twoPi = 2 * Math.PI,
        progress = 0,
        allocated = resolved_threads,
        total = total_threads,
        formatPercent = d3version4.format(".0%");



    var arc = d3version4.arc()
        .startAngle(0)
        .innerRadius(inner_radius)
        .outerRadius(inner_radius + thickness);

    d3version4.select("#resolvedPercentage").html("");

    var svg = d3version4.select("#resolvedPercentage")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
        .append("g")
        .attr("transform", "translate(" + (width  + margin.left + margin.right) / 2 + "," + (height + margin.top + margin.bottom)/ 2 + ")");

    var meter = svg.append("g")
        .attr("class", "funds-allocated-meter");

    meter.append("path")
        .attr("class", "background")
        .attr("d", arc.endAngle(twoPi));

    var foreground = meter.append("path")
        .attr("class", "foreground");

    var percentComplete = meter.append("text")
        .attr("text-anchor", "middle")
        .attr("class", "percent-complete")
        .attr("dy", "0em");

    var description = meter.append("text")
        .attr("text-anchor", "middle")
        .attr("class", "description")
        .attr("dy", "2.3em")
        .text("Threat Resolved");

    var i = d3version4.interpolate(progress, allocated / total);

    d3version4.transition().duration(1000).tween("progress", function () {
        return function (t) {
            progress = i(t);
            foreground.attr("d", arc.endAngle(twoPi * progress));
            percentComplete.text(formatPercent(progress));
        };
    });
}