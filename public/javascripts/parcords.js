
var pc = d3version3.parcoords()("#parcoord_id")
  .alpha(0.2);

var grid = d3version3.divgrid();


function drawPCP(data) {

  // linear color scale

  var blue_to_brown = d3version3.scale.linear()
    .domain([0, 5000])
    .range(["steelblue", "brown"])
    .interpolate(d3version3.interpolateLab);

  // interact with this variable from a javascript console
  var thread_ints = [];


  var colorgen = d3version3.scale.ordinal()
  .range(["#a6cee3","#1f78b4","#b2df8a","#33a02c",
          "#fb9a99","#e31a1c","#fdbf6f","#ff7f00",
          "#cab2d6","#6a3d9a","#ffff99","#b15928"]);

  var color = function(d) { return colorgen(d.malware); };

  // var dimensions = {
  // "duration":
  // 	{
  //     orient: 'right',
  // 		type: 'string',
  // 		tickPadding: 0,
  // 		innerTickSize: 8,
  // 		ticks: 8
  // 	}
  // "malware":
  // 	{
  //     orient: 'right'
  // 	}
  // };
  // $("parcoord_id").remove();
  // if(pc){
  //   pc.remove();
  //
  // }
  pc
    .data(data)
    .hideAxis(["endDate","startDate","body"])
     // .hideAxis(["startDate"])
    .color(color)  // categorical color scale
    .render()
    .updateAxes()
    .brushMode("1D-axes")  // enable brushing
    .reorderable()
    // .interactive()  // command line mode

  var explore_count = 0;
  var exploring = {};
  var explore_start = false;
  pc.svg
    .selectAll(".dimension")
    .style("cursor", "pointer")
    .on("click", function(d) {
      exploring[d] = d in exploring ? false : true;
      event.preventDefault();
      if (exploring[d]) d3version3.timer(explore(d,explore_count));
    });
  pc.svg
    .selectAll(".dimension")
    .filter(function(d) { return d == "startDate" || d == "duration" })
    .selectAll(".tick text")
    .remove();


  function explore(dimension,count) {
    if (!explore_start) {
      explore_start = true;
      d3version3.timer(pc.brush);
    }
    var speed = (Math.round(Math.random()) ? 1 : -1) * (Math.random()+0.5);
    return function(t) {
      if (!exploring[dimension]) return true;
      var domain = pc.yscale[dimension].domain();
      var width = (domain[1] - domain[0])/4;

      var center = width*1.5*(1+Math.sin(speed*t/1200)) + domain[0];

      pc.yscale[dimension].brush.extent([
        d3version3.max([center-width*0.01, domain[0]-width/400]),
        d3version3.min([center+width*1.01, domain[1]+width/100])
      ])(pc.g()
          .filter(function(d) {
            return d == dimension;
          })
      );
    };
  };

  d3version3.select("#grid_pc")
    .datum(data.slice(0,100))
    .call(grid)
    .selectAll(".row_pc")
    .on({
      "mouseover": function(d) { pc.highlight([d]) },
      "mouseout": pc.unhighlight
    });
  // console.log(pc);

  pc.on("brush", function(d) {
    $('#update_charts_button').attr('class', 'btn btn-primary btn-lg');
    thread_cache = d;
  });

};


    // create data table, row hover highlighting
// function updateGrid(data){
//   var grid = d3version3.divgrid();
//
//   d3version3.select("#grid_pc")
//     .datum(data.slice(0,100))
//     .call(grid)
//     .selectAll(".row_pc")
//     .on({
//       "mouseover": function(d) { pc.highlight([d]) },
//       "mouseout": pc.unhighlight
//     });
// }
